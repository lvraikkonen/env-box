# docker pull wurstmeister/kafka:2.12-2.5.0


version: '2'

services:

  zoo1:
    image: zookeeper:3.4.14
    hostname: zoo1
    container_name: zoo1
    ports:
    - 2181:2181
    volumes:
    - "./volume/zoo1/data:/data"
    - "./volume/zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      default:
        ipv4_address: 172.40.0.11

  zoo2:
    image: zookeeper:3.4.14
    hostname: zoo2
    container_name: zoo2
    ports:
    - 2182:2181
    volumes:
    - "./volume/zoo2/data:/data"
    - "./volume/zoo2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      default:
        ipv4_address: 172.40.0.12

  zoo3:
    image: zookeeper:3.4.14
    hostname: zoo3
    container_name: zoo3
    ports:
    - 2183:2181
    volumes:
    - "./volume/zoo3/data:/data"
    - "./volume/zoo3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      default:
        ipv4_address: 172.40.0.13
  
  kafka1:
    image: wurstmeister/kafka:2.12-2.5.0
    restart: always
    hostname: kafka1
    container_name: kafka1
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.31.13.38:9092
      KAFKA_ADVERTISED_HOST_NAME: 172.31.13.38
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # JMX_PORT: 9988 
    volumes:
    - ./volume/kafka1/logs:/kafka
    depends_on:
    - zoo1
    - zoo2
    - zoo3
    networks:
      default:
        ipv4_address: 172.40.0.14

  kafka2:
    image: wurstmeister/kafka:2.12-2.5.0
    restart: always
    hostname: kafka2
    container_name: kafka2
    ports:
    - "9093:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.31.13.38:9093 
      KAFKA_ADVERTISED_HOST_NAME: 172.31.13.38
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # JMX_PORT: 9977
    volumes:
    - ./volume/kafka2/logs:/kafka
    depends_on:
    - zoo1
    - zoo2
    - zoo3
    networks:
      default:
        ipv4_address: 172.40.0.15

  kafka3:
    image: wurstmeister/kafka:2.12-2.5.0
    restart: always
    hostname: kafka3
    container_name: kafka3
    ports:
    - "9094:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.31.13.38:9094
      KAFKA_ADVERTISED_HOST_NAME: 172.31.13.38
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # JMX_PORT: 9966
    volumes:
    - ./volume/kafka3/logs:/kafka
    depends_on:
    - zoo1
    - zoo2
    - zoo3
    networks:
      default:
        ipv4_address: 172.40.0.16

  # kafka-manager:
  #   image: sheepkiller/kafka-manager:latest
  #   restart: always
  #   container_name: kafa-manager
  #   hostname: kafka-manager
  #   ports:
  #     - "9002:9000"
  #   links:            # 连接本compose文件创建的container
  #     - kafka1
  #     - kafka2
  #     - kafka3
  #   depends_on:
  #   - zoo1
  #   - zoo2
  #   - zoo3
  #   environment:
  #     ZK_HOSTS: zoo1:2181,zoo2:2181,zoo3:2181
  #     KAFKA_BROKERS: kafka1:9092,kafka2:9093,kafka3:9094
  #     APPLICATION_SECRET: letmein
  #     KM_ARGS: -Djava.net.preferIPv4Stack=true
  #   networks:
  #     default:
  #       ipv4_address: 172.40.0.10

networks:
  default:
    external:   # 使用已创建的网络
      name: zookeeper_network